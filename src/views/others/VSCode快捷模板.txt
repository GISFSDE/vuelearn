{
	// Place your 全局 snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"http-get请求": {
		"prefix": "wget",
		"body": [
			"this.\\$http({",
			"url: this.\\$http.adornUrl(''),",
			"method: 'get',",
			"params: this.\\$http.adornParams({})",
			"}).then(({ data }) => {",
			"})"
		],
		"description": "httpGET请求"
	},
	"http-post请求": {
		"prefix": "wpost",
		"body": [
			"this.\\$http({",
			"url: this.\\$http.adornUrl(''),",
			"method: 'post',",
			"data: this.\\$http.adornData(data, false)",
			"}).then(({ data }) => { });"
		],
		"description": "httpPOST请求"
	},
	"axios-get请求": {
		"prefix": "aget",
		"body": [
			"import axios from 'axios';",
			"this.$axios.get(''+this.username+'/'+this.password)",
			".then(data=> {",
			"console.log('data',data)",
			"}).catch(error=> {",
			"console.log('error',error);",
			"});"
		],
		"description": "axiosPOST请求"
	},
	"axios-get-param请求": {
		"prefix": "apget",
		"body": [
			"import axios from 'axios';",
			"this.$axios.get('',{",
			" params: {",
			"username: this.username,",
			"password: this.password}",
			"}).then(data =>{",
			"console.log('data',data)",
			"}).catch(error => {",
			"console.log('error',error);});"
		],
		"description": "axiosGetParam请求"
	},
	"axios-post请求": {
		"prefix": "apost",
		"body": [
			"import axios from 'axios';",
			"this.$axios.post('',{",
			"username: this.username,",
			"password: this.password",
			"}).then(data => { ",
			"console.log('data',data)",
			"}).catch(error => {",
			"console.log('error',error);}); "
		],
		"description": "axiosPOST请求"
	},
	"axios-put请求": {
		"prefix": "aput",
		"body": [
			"import axios from 'axios';",
			"this.$axios.put('',{",
			"id: 1,",
			"username: this.username,",
			"password: this.password",
			"}).then(data => {",
			"console.log('data',data)",
			"}).catch(error => {",
			"console.log('error',error);",
			"});"
		],
		"description": "axiosPut请求"
	},
	"axios-delete请求": {
		"prefix": "adelete",
		"body": [
			"import axios from 'axios';",
			"this.$axios.delete('')",
			".then(data=> {",
			"console.log('data',data)",
			"}).catch(error=> {",
			"console.log('error',error);});"
		],
		"description": "axiosDelete请求"
	},
	"console.log快捷显示": {
		"prefix": "cl",
		"body": [
			"console.log('',)",
		],
		"description": "console.log快捷显示"
	},
	"vue模板": {
		"prefix": "vue",
		"body": [
			"<!-- $1 -->",
			"<template>",
			"<div class='$2'>$5</div>",
			"</template>",
			"",
			"<script>",
			"//这里可以导入其他文件（比如：组件，工具js，第三方插件js，json文件，图片文件等等）",
			"//例如：import 《组件名称》 from '《组件路径》';",
			"",
			"export default {",
			"//import引入的组件需要注入到对象中才能使用",
			"components: {},",
			"data() {",
			"//这里存放数据",
			"return {",
			"",
			"};",
			"},",
			"//监听属性 类似于data概念",
			"computed: {},",
			"//监控data中的数据变化",
			"watch: {},",
			"//方法集合",
			"methods: {",
			"",
			"},",
			"//生命周期 - 创建完成（可以访问当前this实例）",
			"created() {",
			"",
			"},",
			"//生命周期 - 挂载完成（可以访问DOM元素）",
			"mounted() {",
			"",
			"},",
			"beforeCreate() {}, //生命周期 - 创建之前",
			"beforeMount() {}, //生命周期 - 挂载之前",
			"beforeUpdate() {}, //生命周期 - 更新之前",
			"updated() {}, //生命周期 - 更新之后",
			"beforeDestroy() {}, //生命周期 - 销毁之前",
			"destroyed() {}, //生命周期 - 销毁完成",
			"activated() {}, //如果页面有keep-alive缓存功能，这个函数会触发",
			"}",
			"</script>",
			"<style scoped>",
			"</style>"
		],
		"description": "生成vue模板"
	}
}